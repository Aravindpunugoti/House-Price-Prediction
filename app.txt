import numpy as np
from flask import Flask, request, jsonify, render_template
import pickle
#import util

app = Flask(__name__)
pkl_file = open('try.pkl','rb')
model = pickle.load(open('try.pkl', 'rb'))
index_dict = pickle.load(pkl_file)


@app.route('/')
def home():
    return render_template('try.html')

@app.route('/predict',methods=['POST'])
def predict():

    '''int_features = [x for x in request.form.values()]
    final_features = [np.array(int_features)]
    buffer = [0]*151
    cnt=0
    #print("After action")
    #print(buffer)

    ['other',1056,'super',2,1,3]

    for i in final_features:
        if index_dict in i:
            buffer = [1]
            cnt=cnt+1
        else:
            buffer = [0]

    #print("Buffer")
    #print(buffer)
    #print("Count")
    #print(cnt)


    print(final_features)
    prediction = model.predict(final_features)

    output = round(prediction[0], 2)


    #data = request.get_json(force=True)'''

    if request.method=='POST':
        result = request.form

        pkl_file = open('cat', 'rb')
        index_dict = pickle.load(pkl_file)

        new_vector = np.zeros(151)

        '''try:
            print("Try block for location")
            new_vector[index_dict['location_' + str(result['location'])]] = 1
        except:
            print("except block for location")
            pass'''

        '''try:
            print("Try block for location")
            new_vector[index_dict[str(result['location'])]] = 1
        except:
            print("except block for location")
            pass'''


        new_vector[index_dict['location_'+str(result['location'])]+4] = 1
        new_vector[index_dict[str(result['area'])]] = 1

        new_vector[0] = result('total_sqft')
        try:
            new_vector[index_dict['sqft' + str(result['sqft'])]] = 1
        except:
            pass

        try:
            print("try block in size")
            new_vector[index_dict[str(result['size'])]] = 1
        except:
            print("except block in size")
            pass


        '''try:
            new_vector[index_dict[str(result['area'])]] = 1
        except:
            pass

        try:
            new_vector[index_dict[str(result['bath'])]] = 1
        except:
            pass

        try:
            new_vector[index_dict[str(result['balcony'])]] = 1
        except:
            pass'''

    '''predict_request = [request.form['location'], request.form['sqft'],request.form['area'],request.form['bath'], request.form['balcony']]
    #request.form['area'],, request.form['balcony']
    print(predict_request)
    final_feature = [np.array(predict_request)]
    prediction = model.predict(final_feature)
    pred = prediction[0]
    print(pred)'''

    #new_vector = [[new_vector]]
    print("all data")
    print(new_vector)
    print("Size")
    #print(new_vector[index_dict['location']])

    print("Area")
    #print([index_dict['area_Plot Area']])
    #print(result['area'])


    print("Balcony")
    print(result['balcony'])
    #print(new_vector[index_dict['balcony']])

    print("Total sqft")
    #print(new_vector[index_dict['total_sqft']])

    print(index_dict)
    #print(len(new_vector))


    new = [new_vector]




    prediction = model.predict(new)
    print(prediction)

    return render_template('try.html', Predict_score ='Your house estimate price is  $ {}'.format(prediction))

if __name__ == "__main__":
    app.run(debug=True)
